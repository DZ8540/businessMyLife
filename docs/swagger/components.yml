components:
  schemas:
    Pagination:
      type: object
      properties:
        meta:
          type: object
          properties:
            total: { type: integer }
            perPage: { type: integer }
            currentPage: { type: integer }
            lastPage: { type: integer }
            firstPage: { type: integer }
            firstPageUrl: { type: string }
            lastPageUrl: { type: string }
            nextPageUrl:
              nullable: true
              type: string
            previousPageUrl:
              type: string
              nullable: true

  parameters:
    Page:
      in: query
      name: page
      required: true
      schema:
        type: number
        default: 1

    Limit:
      in: query
      name: limit
      required: false
      schema:
        type: number
        default: 100

    OrderBy:
      in: query
      name: orderBy
      required: false
      schema:
        type: string
        enum: ['asc', 'desc']

    OrderByColumn:
      in: query
      name: orderByColumn
      required: false
      schema:
        type: string

  responses:
    Success:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              message: { type: string }
              status: { type: integer }
              code:
                type: string
                enum: ['SUCCESS']

    Error:
      content:
        application/json:
          schema:
            type: object
            properties:
              message: { type: string }
              status: { type: integer }
              code:
                type: string
                enum: ['CLIENT_ERROR', 'DATABASE_ERROR', 'SERVER_ERROR', 'MAILER_ERROR', 'TOKEN_EXPIRED', 'VALIDATION_ERROR']
              body:
                type: object
                nullable: true
